## An example config.ini file for the Arduino Due pulsebox
## Radim Hošák <hosak(at)optics.upol.cz>
## 2021 Quantum Optics Lab Olomouc

[Pulsebox]
## pulsebox_pins: The PORTC pins used for the pulsebox channels.
## See https://www.arduino.cc/en/Hacking/PinMappingSAM3X for a table of
## available PORTC pins and their mapping to the Arduino Due pins.
# pulsebox_pins = 1,3,5,7,9,18,16,14,12,2,4,6,8,19,17,15

## trigger_pin: The Arduino Due pin used to trigger the pulsebox
## (if running in triggered mode).
# trigger_pin = 52

## cont_mode_delay_ms: The delay (in milliseconds) between repetitions
## of the pulse sequence (when running in the continuous/repeat mode)
# cont_mode_delay_ms = 0

## calibration: The amount (in seconds) by which the delay is prolonged
## when the delay loop iteration count is increased by one.
## More technically: the slope of the time/iterations dependence.
## If no modifications to the delay loop were made, the default of 6.4e-08
## is correct.
# calibration = 6.4e-08

[CodeBlocks]
## header: An optional header for the .ino source files.
# header = Automatically generated file

[Arduino]
## port:
##    - Linux etc.: the path to the Arduino Due device.
##                  (usually /dev/ttyACMx, where x is a number)
##    - Windows: The COM port belonging to the Arduino Due.
##               (COMx, where x is a number)
# port = /dev/ttyACM0

## by_id_string: (optional, LINUX ONLY) the identifier of the Arduino Due
## which can be found by `ls /dev/serial/by-id`.
## This is used for the __experimental__ auto-discover feature.
## The identifier below belongs to a board I used for testing and will
## probably not work for you. Use the command mentioned above to find out
## the identifier of your Arduino Due.
by_id_string = usb-Arduino__www.arduino.cc__Arduino_Due_Prog._Port_95730333038351905150-if00
